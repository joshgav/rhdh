app:
  title: RHDH on OpenShift (joshgav)

organization:
  name: joshgav @ Red Hat

integrations:
  github:
    - host: github.com
      ## if using a PAT:
      # token: ${GITHUB_TOKEN}
      ## if using GitHub apps:
      apps:
        - $include: github-app-credentials.yaml

# proxy:
#   endpoints:
#     # Plugin: Quay
#     '/quay/api':
#       target: https://${registry_hostname}
#       headers:
#         X-Requested-With: 'XMLHttpRequest'
#         Authorization: 'Bearer ${QUAY_TOKEN}'
#       changeOrigin: true
#       secure: true
#       pathRewrite:
#         '^/api/proxy/quay/api': '/'

# techdocs:
#   builder: 'local'
#   generator:
#     runIn: 'local'
#   publisher:
#     type: 'local'

auth:
  environment: development
  providers:
    github:
      development:
        clientId: ${GITHUB_APP_CLIENT_ID}
        clientSecret: ${GITHUB_APP_CLIENT_SECRET}

catalog:
  import:
    entityFilename: catalog-info.yaml
    pullRequestBranchName: backstage-integration
  rules:
  - allow: [Component, System, Group, Resource, Location, Template, API]
  locations:
  - type: url
    target: https://github.com/joshgav/spring-apiserver/blob/main/backstage-catalog-info.yaml
  ## example Backstage templates
  - type: url
    target: https://github.com/backstage/backstage/blob/master/plugins/scaffolder-backend/sample-templates/remote-templates.yaml
  ## example Janus (Red Hat) templates
  - type: url
    target: https://github.com/janus-idp/backstage-showcase/blob/main/catalog-entities/all.yaml
  - type: url
    target: https://github.com/janus-idp/software-templates/blob/main/showcase-templates.yaml
  providers:
    ## scans orgs in GitHub and adds repos as components to catalog
    github:
      ## TODO: this _must_ be named "providerId", which seems a bug
      providerId:
        organization: joshgav-org
        schedule:
          frequency:
            minutes: 30
          timeout:
            minutes: 3
    ## scans orgs in GitHub and adds users and groups to catalog
    githubOrg:
      default:
        orgUrl: https://github.com/joshgav-org
        schedule:
          frequency:
            minutes: 30
          timeout:
            minutes: 3

kubernetes:
  serviceLocatorMethod:
    type: multiTenant
  clusterLocatorMethods:
    - type: config
      clusters:
        - url: https://kubernetes.default.svc/
          name: local-cluster
          caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          authProvider: serviceAccount
          # don't specify this attribute to force lookup in pod in cluster
          # serviceAccountToken: ''
          dashboardUrl: https://console-openshift-console.${openshift_ingress_domain}/
          dashboardApp: openshift
          skipTLSVerify: false
          skipMetricsLookup: false
  customResources:
    - group: tekton.dev
      apiVersion: v1beta1
      plural: pipelineruns
    - group: tekton.dev
      apiVersion: v1beta1
      plural: taskruns
    - group: 'route.openshift.io'
      apiVersion: 'v1'
      plural: 'routes'

argocd:
  appLocatorMethods:
    - type: config
      instances:
        - name: argo
          url: https://openshift-gitops-server-openshift-gitops.${openshift_ingress_domain}/
          token: ${ARGOCD_AUTH_TOKEN}

quay:
  uiUrl: 'https://${registry_hostname}'

enabled:
  github: true